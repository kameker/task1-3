package vgu.dz.tvelth.FrameMain;


import vgu.dz.tvelth.DrawRec;
import vgu.dz.myfuncs.MyMath;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;


public class FrameMain extends JFrame {
    private JPanel panelMain;
    private JButton saveButton;
    private JButton drawButton;
    private JLabel picLabel;
    private JTextField sizeTextField;
    private JPanel panel;
    private JLabel depthRecursionLabel;
    private JRadioButton randomColorButton;
    private JRadioButton xLines;
    private JTextField shiftTextField;
    private JTextField radTextField;
    private JTextField radiusText;

    public FrameMain() {
        this.setTitle("Рисовалка");
        this.setContentPane(panelMain);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.pack();


        drawButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println((randomColorButton.isSelected()));
                BufferedImage image = DrawRec.drawRecursion(MyMath.isNumber(sizeTextField.getText()) ? Integer.parseInt(sizeTextField.getText()) : 6,
                        randomColorButton.isSelected(), xLines.isSelected(),
                        MyMath.isNumber(radiusText.getText()) ? Integer.parseInt(radiusText.getText()) : 50,
                        MyMath.isNumber(shiftTextField.getText()) ? Double.parseDouble(shiftTextField.getText()) : 1.5,
                        MyMath.isNumber(radTextField.getText()) ? Double.parseDouble(radTextField.getText()) : 2.5);
                DrawRec.setImage(image, picLabel);
                drawButton.setText("Обновить изображение");
            }
        });
        saveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                BufferedImage image = DrawRec.drawRecursion(MyMath.isNumber(sizeTextField.getText()) ? Integer.parseInt(sizeTextField.getText()) : 6,
                        randomColorButton.isSelected(), xLines.isSelected(),
                        MyMath.isNumber(radiusText.getText()) ? Integer.parseInt(radiusText.getText()) : 50,
                        MyMath.isNumber(shiftTextField.getText()) ? Integer.parseInt(shiftTextField.getText()) : 1.5,
                        MyMath.isNumber(radTextField.getText()) ? Integer.parseInt(radTextField.getText()) : 2.5);
                DrawRec.savePicture("out.png", image);
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelMain;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}
